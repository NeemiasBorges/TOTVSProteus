
		let dataProject = {"projectName":"","tree":{"name":"raiz","files":[{"file":"DnlTestingREST.prw","uniqueName":"DnlTestingREST.prw"}],"paths":[]},"files":[{"fileName":"DnlTestingREST.prw","functionList":[{"functionName":"DnlTestingREST","author":"Neemias","description":"API REST para efetuar testes de REST no Protheus - Apenas para estudos da oficna de <br>\"Uso pratico de API's Proteus\" ministrada pelo professor Maicon Macedo inicio: 09/03<br>Todos os metodos gravam, consultam e apagam os dados somente em<br>memoria, portanto nenhum deles impacta no ambiente Protheus<br>Professor: Maicon Macedo (maiconsoft.tecnologia@gmail.com)<br>Aluno: Neemias Borges (neemiasb.dev@gmail.com)","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[],"see":[],"since":"09/03/2024","todo":[],"version":"1.0"},{"functionName":"POST","author":"Neemias Borges","description":"Coloca em memoria o JSON informado","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[],"see":[],"since":"09/03/2024","todo":[],"version":"1.0"},{"functionName":"GET","author":"Neemias Borges","description":"Retorna o JSON do ID informado","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[],"see":[],"since":"09/03/2024","todo":[],"version":"1.0"},{"functionName":"DELETE","author":"Neemias Borges","description":"Apaga o JSON do ID informado","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[],"see":[],"since":"09/03/2024","todo":[],"version":"1.0"},{"functionName":"PUT","author":"Neemias Borges","description":"Atualiza o JSON do ID informado","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[],"see":[],"since":"09/03/2024","todo":[],"version":"1.0"},{"functionName":"isJSONValid","author":"Neemias Borges","description":"Valida se o JSON informado e vÃ¡lido","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[{"name":"oSelf Objeto da classe REST","type":"","description":"","obrigatory":true}],"return":[],"see":[],"since":"09/03/2024","todo":[],"version":"1.0"},{"functionName":"postJSON","author":"Neemias Borges","description":"Grava o JSON informado na memoria global do servidor","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[{"name":"cJSON JSON que serÃ¡ gravado na memoria global do servidor","type":"","description":"","obrigatory":true}],"return":[{"type":"cID ID que foi gerado para gravar o JSON na memoria global do servidor","description":""}],"see":[],"since":"09/03/2024","todo":[],"version":"1.0"},{"functionName":"putJSON","author":"Neemias Borges","description":"Atualiza o JSON informado na memoria global do servidor","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[{"name":"cID ID do JSON na memoria global do servidor","type":"","description":"","obrigatory":true},{"name":"cJSON JSON que serÃ¡ gravado na memoria global do servidor","type":"","description":"","obrigatory":true}],"return":[],"see":[],"since":"09/03/2024","todo":[],"version":"1.0"},{"functionName":"existJSON","author":"Neemias Borges","description":"Verifica se o ID informado existe na memoria global do servidor","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[{"name":"oSelf Objeto da classe REST","type":"","description":"","obrigatory":true}],"return":[{"type":"lExist Indica se o JSON foi encontrado na memoria","description":""}],"see":[],"since":"09/03/2024","todo":[],"version":"1.0"},{"functionName":"makeID","author":"Neemias Borges","description":"Encapsula a funÃ§Ã£o FWUUIDv4 caso exista a necessidade de alterar<br>a forma que o ID e gerado","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[{"type":"cID ID Ãºnico para persistir o JSON em memoria","description":""}],"see":[],"since":"09/03/2024","todo":[],"version":"1.0"},{"functionName":"POST","author":"Neemias Borges","description":"Retorna um codigo HTTP conforme o recebido,<br>caso nenhum codigo seja recebido, o retorno e aleatorio","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[],"see":[],"since":"24/05/2019","todo":[],"version":"1.0"},{"functionName":"GET","author":"Neemias Borges","description":"Retorna um codigo HTTP conforme o recebido,<br>caso nenhum codigo seja recebido, o retorno e aleatorio","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[],"see":[],"since":"24/05/2019","todo":[],"version":"1.0"},{"functionName":"DELETE","author":"Neemias Borges","description":"Retorna um codigo HTTP conforme o recebido,<br>caso nenhum codigo seja recebido, o retorno e aleatorio","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[],"see":[],"since":"24/05/2019","todo":[],"version":"1.0"},{"functionName":"PUT","author":"Neemias Borges","description":"Retorna um codigo HTTP conforme o recebido,<br>caso nenhum codigo seja recebido, o retorno e aleatorio","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[],"see":[],"since":"24/05/2019","todo":[],"version":"1.0"},{"functionName":"ReturnHTTPCodeAPI","author":"Neemias Borges","description":"FunÃ§Ã£o padrÃ£o para o retorno da API de testes de codigo HTTP<br>Gera o codigo HTTP e retorno o Boolean que a API padrÃ£o ADVPL espera","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[{"name":"oSelf Objeto do serviÃ§o REST","type":"","description":"","obrigatory":true}],"return":[{"type":"Boolean","description":"se o codigo gerado for um codigo de erro .F., caso contrÃ¡rio .T."}],"see":[],"since":"24/05/2019","todo":[],"version":"1.0"},{"functionName":"getCode","author":"Neemias Borges","description":"Retorna um codigo HTTP que serÃ¡ usado no retorno da API","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[{"name":"oSelf Objeto do serviÃ§o REST","type":"","description":"","obrigatory":true}],"return":[{"type":"nCod Codigo HTTP","description":"sendo entre 2XX ate 5XX"}],"see":[],"since":"24/05/2019","todo":[],"version":"1.0"},{"functionName":"isCodeValid","author":"Neemias Borges","description":"Verifica se o codigo HTTP recebido via query param e vÃ¡lido,<br>caso seja, a propriedade da classe tambem pode ser convertida para<br>numerica caso seja recebida como string","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[{"name":"oSelf Objeto REST","type":"","description":"","obrigatory":true}],"return":[{"type":"lValid Indica se o codigo recebido e vÃ¡lido","description":""}],"see":[],"since":"27/05/2019","todo":[],"version":"1.0"},{"functionName":"getRandomCode","author":"Neemias Borges","description":"Gera um codigo entre 200, 300, 400 e 500 de forma aleatoria","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[],"return":[{"type":"Numeric","description":"Codigo HTTP, sendo entre 2XX ate 5XX"}],"see":[],"since":"24/05/2019","todo":[],"version":"1.0"},{"functionName":"IsErrorCode","author":"Neemias Borges","description":"Retorna se trata-se de um codigo de erro","example":[],"history":[],"sample":[],"link":[],"obs":[],"param":[{"name":"nCode Codigo HTTP","type":"","description":"","obrigatory":true}],"return":[{"type":"Boolean","description":"Indica se o codigo HTTP e de erro"}],"see":[],"since":"24/05/2019","todo":[],"version":"1.0"}]}]}
		